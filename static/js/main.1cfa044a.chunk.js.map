{"version":3,"sources":["components/Bug/index.js","App.js","reportWebVitals.js","index.js"],"names":["BEHAVIOR","inactive","speed","rotation","active","excited","reducer","state","action","type","newX","x","status","Math","cos","direction","newY","y","sin","newDirection","random","PI","maxX","windowSize","width","maxY","height","Bug","props","useReducer","downtime","dispatch","handleTimeStep","useCallback","useEffect","timeStepInterval","setInterval","clearInterval","className","style","left","top","getWindowSize","window","innerWidth","innerHeight","App","useState","setWindowSize","handleResize","addEventListener","removeEventListener","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1cfa044a.chunk.js","sourcesContent":["import { useEffect, useReducer, useCallback } from 'react';\nimport './style.css';\n\nconst TIMESTEP = 20; // ms\nconst SIZE = 10; // px\nconst BEHAVIOR = {\n  inactive: {\n    speed: 0, // px per TIMESTEP\n    rotation: 0, // range of possible rotations in radians per TIMESTEP\n  },\n  active: {\n    speed: 1,\n    rotation: 0.5,\n  },\n  excited: {\n    speed: 2,\n    rotation: 2,\n  },\n};\n\nfunction generateInitialState(windowSize) {\n  return {\n    status: \"active\",\n    x: Math.random() * windowSize.width,\n    y: Math.random() * windowSize.height,\n    direction: Math.random() * 2 * Math.PI,\n    downtime: 1,\n  };\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"timeStep\": \n      let newX = state.x + BEHAVIOR[state.status].speed * Math.cos(state.direction);\n      let newY = state.y + BEHAVIOR[state.status].speed * Math.sin(state.direction);\n      let newDirection = state.direction + BEHAVIOR[state.status].rotation * (Math.random() - 0.5);\n      newDirection %= 2 * Math.PI;\n      const maxX = action.windowSize.width - SIZE;\n      const maxY = action.windowSize.height - SIZE;\n\n      if (newX < 0) {\n        newX = 0;\n        if (newY < 0) {\n          // top left corner\n          newY = 0;\n          newDirection = newDirection > 5 * Math.PI/4 ? 0 : Math.PI/2;\n        } else if (newY > maxY) {\n          // bottom left corner\n          newY = maxY;\n          newDirection = newDirection > 3 * Math.PI/4 ? 3 * Math.PI/2 : 0;\n        } else {\n          // left edge\n          newDirection = newDirection > Math.PI ? 3 * Math.PI/2 : Math.PI/2;\n        }\n      } else if (newX > maxX) {\n        newX = maxX;\n        if (newY < 0) {\n          // top right corner\n          newY = 0;\n          newDirection = newDirection > 7 * Math.PI/4 ? Math.PI/2 : Math.PI;\n        } else if (newY > maxY) {\n          // bottom right corner\n          newY = maxY;\n          newDirection = newDirection > Math.PI/4 ? Math.PI : 3 * Math.PI/2;\n        } else {\n          // right edge\n          newDirection = newDirection > Math.PI ? 3 * Math.PI/2 : Math.PI/2;\n        }\n      } else {\n        if (newY < 0) {\n          // top edge\n          newY = 0;\n          newDirection = newDirection > 3 * Math.PI/2 ? 0 : Math.PI;\n        } else if (newY > maxY) {\n          // bottom edge\n          newY = maxY;\n          newDirection = newDirection > Math.PI/2 ? Math.PI : 0;\n        }\n      }\n\n      return { ...state, x: newX, y: newY, direction: newDirection };\n\n    case \"wakeUp\":\n      return state;\n    case \"squash\":\n      return state;\n    case \"scare\":\n      return state;\n    case \"calm\":\n      return state;\n    default:\n      return state;\n  }\n}\n\nfunction Bug(props) {\n  const [state, dispatch] = useReducer(reducer, generateInitialState(props.windowSize));\n\n  const handleTimeStep = useCallback(\n    () => {\n      dispatch({type: \"timeStep\", windowSize: props.windowSize});\n    }, \n    [props.windowSize]\n  );\n\n  useEffect(\n    () => {\n      const timeStepInterval = setInterval(handleTimeStep, TIMESTEP);\n      return () => clearInterval(timeStepInterval);\n    }, \n    [handleTimeStep]\n  );\n\n  return (\n    <div className=\"Bug\" style={{ left: state.x, top: state.y, height: SIZE, width: SIZE }}>\n    </div>\n  );\n}\n\nexport default Bug;\n","import { useState, useEffect } from 'react';\nimport Bug from './components/Bug';\nimport './App.css';\n\nfunction getWindowSize() {\n  return { width: window.innerWidth, height: window.innerHeight };\n}\n\nfunction App() {\n  const [windowSize, setWindowSize] = useState(getWindowSize());\n\n  useEffect(() => {\n    const handleResize = () => setWindowSize(getWindowSize());\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n\n  return (\n    <div className=\"App\">\n      <Bug windowSize={ windowSize }/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}